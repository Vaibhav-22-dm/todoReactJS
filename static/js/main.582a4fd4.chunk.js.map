{"version":3,"sources":["Navbar.js","Create.js","Edit.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","username","to","Create","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","useState","title","setTitle","desc","setDesc","deadline","setDeadline","history","useHistory","action","id","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","creationdate","status","then","push","style","padding","htmlFor","type","name","onChange","target","value","cols","rows","className","Edit","useParams","isFetched","setIsFetched","res","json","data","document","getElementById","console","log","catch","error","List","tasks","setTasks","getTasks","updateTasks","ele","last","querySelectorAll","children","firstChild","checked","useEffect","map","task","textAlign","defaultChecked","onClick","pathname","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.582a4fd4.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\n\r\nconst Navbar = ({username}) => {\r\n    return ( \r\n        <header>\r\n            <h2>\r\n                {username}\r\n            </h2>\r\n            <nav>\r\n                <Link to=\"/todoReactJS/\">All</Link>\r\n                <Link to='/todoReactJS/create'>Create</Link>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import { useHistory } from 'react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nconst Create = () => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [desc, setDesc] = useState('')\r\n    const [deadline, setDeadline] = useState('')\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        fetch(`https://my-json-server.typicode.com/vaibhav-22-dm/todoListServer/tasks/`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({title:title,desc:desc,deadline:deadline,creationdate:today,status:'incomplete'})\r\n        }).\r\n        then(() => {history.push(\"/todoListServer/\")})\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <form action=\"\" id=\"createTask\" onSubmit={handleSubmit}>\r\n            <h2 style={{padding:\"10px\"}}>Create Task</h2>\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={(e) => {setTitle(e.target.value)}} />\r\n            <label htmlFor=\"desc\">Description</label>\r\n            <textarea name=\"desc\" id=\"desc\" cols=\"30\" rows=\"10\" onChange={(e) => {setDesc(e.target.value)}} ></textarea>\r\n            \r\n            <div className=\"formend\">\r\n                <div className=\"deadlinebox\">\r\n                    <label htmlFor=\"deadline\">Deadline</label>\r\n                    <input type=\"date\" name=\"deadline\" id=\"deadline\" onChange={(e) => {setDeadline(e.target.value)}}  />\r\n                </div>\r\n                <input type=\"submit\" value=\"Create\" id=\"create\"/>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n \r\nexport default Create;","import { useHistory } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst Edit = () => {\r\n    const { id } = useParams()\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [deadline, setDeadline] = useState('');\r\n    const [isFetched, setIsFetched] = useState(true);\r\n\r\n    if(isFetched) {\r\n        fetch('https://my-json-server.typicode.com/vaibhav-22-dm/todoListServer/tasks/' + id)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setTitle(data.title)\r\n            setDesc(data.desc)\r\n            setDeadline(data.deadline)\r\n            setIsFetched(false)\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setTitle(document.getElementById('title').value)\r\n        setDesc(document.getElementById('desc').value)\r\n        setDeadline(document.getElementById('deadline').value)\r\n        console.log(title, desc, deadline)\r\n        fetch(`https://my-json-server.typicode.com/vaibhav-22-dm/todoListServer/tasks/` + id,\r\n        {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({title:title,desc:desc,deadline:deadline,id:id})\r\n        }).\r\n        then(() => {\r\n            console.log(title)\r\n            console.log(1001)\r\n            history.push(\"/todoReactJS/\")})\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    return ( \r\n        <form action=\"\" id=\"editTask\" onSubmit={handleSubmit}>\r\n            <h2 style={{padding:\"10px\"}}>Edit Task</h2>\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" name=\"title\" id=\"title\" \r\n            onChange={e => {setTitle(e.target.value)}} \r\n            value={title}\r\n            />\r\n            <label htmlFor=\"desc\">Description</label>\r\n            <textarea name=\"desc\" id=\"desc\" cols=\"30\" rows=\"10\" \r\n            onChange={e => {setDesc(e.target.value)}} value={desc}\r\n            ></textarea>\r\n            \r\n            <div className=\"formend\">\r\n                <div className=\"deadlinebox\">\r\n                    <label htmlFor=\"deadline\">Deadline</label>\r\n                    <input type=\"text\" name=\"deadline\" id=\"deadline\"\r\n                     value={deadline} \r\n                     onChange={e => {\r\n                         setDeadline(e.target.value)\r\n                         console.log(deadline, e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" value=\"Edit\" id=\"create\" />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n \r\nexport default Edit;","import { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Edit from \"./Edit\";\r\nimport {Link} from 'react-router-dom'\r\nconst List = () => {\r\n    const [tasks, setTasks] = useState(null) ;\r\n    const getTasks = () => {\r\n        fetch('https://my-json-server.typicode.com/vaibhav-22-dm/todoListServer/tasks/').\r\n        then(res=>res.json())\r\n        .then(data=>{\r\n            setTasks(data)\r\n        })\r\n        return 0\r\n    }\r\n    const history = useHistory()\r\n    const deleteTasks = (ele) => {\r\n        fetch(`https://my-json-server.typicode.com/vaibhav-22-dm/todoListServer/tasks/${ele}`,\r\n        {\r\n            method: 'DELETE'\r\n        }).\r\n        then(() => {\r\n            getTasks()\r\n            history.push(\"/todoReactJS/\")\r\n        })\r\n    }\r\n\r\n    const updateTasks = (ele) => {\r\n        const row = document.querySelectorAll('tr')[ele]\r\n        const target = row.children[5]\r\n        const last = target.firstChild\r\n        console.log(last)\r\n        if(last.checked){\r\n            console.log(1)\r\n            var status = 'completed'\r\n        }\r\n        else{\r\n            status = 'incomplete'\r\n            console.log(2)\r\n        }\r\n\r\n        fetch(`https://my-json-server.typicode.com/vaibhav-22-dm/todoListServer/tasks/${ele}`,\r\n        {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({status:status})\r\n        }).\r\n        then(() => {\r\n            getTasks()\r\n            history.push(\"/todoReactJS/\")\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getTasks()\r\n    },[])\r\n    \r\n    \r\n\r\n    return ( \r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Sr.No.</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Deadline</th>\r\n                        <th>Creation Date</th>\r\n                        <th>Status</th>\r\n                        <th>op1</th>\r\n                        <th>op2</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tasks && tasks.map((task) => (\r\n                    <tr key={task.id}>\r\n                        <td style={{textAlign: 'center'}}>{task.id}</td>\r\n                        <td>{task.title }</td>\r\n                        <td>{task.desc}</td>\r\n                        <td>{task.deadline}</td>\r\n                        <td>{task.creationdate}</td>\r\n                        <td style={{textAlign: 'center'}}>\r\n                            {task.status === 'completed' && <input type=\"checkbox\" name=\"\" id=\"\" defaultChecked onClick={() => {updateTasks(task.id)}}/>}\r\n                            {task.status === 'incomplete' && <input type=\"checkbox\" name=\"\" id=\"\" onClick={() => {updateTasks(task.id)}}/>}\r\n                            {task.status}\r\n                        </td>\r\n                        <td>\r\n                            <Link to={\r\n                                {\r\n                                    pathname:`/todoReactJS/edit/${task.id}`,\r\n                                    // props:{\r\n                                    //     task:task\r\n                                    // }\r\n                                }\r\n                            }  style={{padding: '5px'}\r\n                            }>Edit\r\n                            </Link>\r\n                        </td>\r\n                        <td><button style={{padding: '5px'}} onClick={() => {deleteTasks(task.id)}}>Delete</button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n    );\r\n}\r\n \r\nexport default List;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './Navbar';\nimport Create from './Create';\nimport List from './List';\nimport Edit from './Edit';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>ToDo List</h1>\n        <Navbar username=\"Vaibhav\"/>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/todoReactJS/\">\n              <List />\n            </Route>\n            <Route exact path=\"/todoReactJS/create\">\n              <Create />\n            </Route>\n            <Route exact path=\"/todoReactJS/edit/:id\">\n              <Edit />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}